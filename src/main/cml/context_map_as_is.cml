/* The DDD Cargo sample application modeled in CML. Note that we split the application into multiple bounded contexts. */
ContextMap ContextMapASIS {
	contains EntregasContext
	contains OrdenesContext
	contains RutasContext
    contains FlotaTercerosContext
    contains FlotaPropiaContext
    contains InventarioBodegasContext
    contains InventarioCentrosDistribucionContext
    contains EmpaquetadoContext

	/* As Evans mentions in his book (Bounded Context chapter): The voyage planning can be seen as
	 * separated bounded context. However, it still shares code with the booking application (CargoBookingContext).
	 * Thus, they are in a 'Shared-Kernel' relationship.
	 */
	// CargoBookingContext [SK]<->[SK] VoyagePlanningContext

	// /* Note that the splitting of the LocationContext is not mentioned in the original DDD sample of Evans.
	//  * However, locations and the management around them, can somehow be seen as a separated concept which is used by other
	//  * bounded contexts. But this is just an example, since we want to demonstrate our DSL with multiple bounded contexts.
	//  */
	// CargoBookingContext [D]<-[U,OHS,PL] LocationContext

	// VoyagePlanningContext [D]<-[U,OHS,PL] LocationContext

    FlotaPropiaContext [SK]<->[SK] FlotaTercerosContext
    FlotaPropiaContext [D]<-[U] RutasContext
    FlotaTercerosContext [D,ACL]<-[U] RutasContext
    InventarioBodegasContext [D]<-[U] OrdenesContext
    EntregasContext [D]<-[U] EmpaquetadoContext 
    InventarioCentrosDistribucionContext [D]<-[U] InventarioBodegasContext
    EmpaquetadoContext [D]<-[U] InventarioCentrosDistribucionContext
    EmpaquetadoContext [D]<-[U] InventarioBodegasContext


}

BoundedContext EntregasContext {

}

BoundedContext OrdenesContext {

}

BoundedContext RutasContext {

}

BoundedContext FlotaTercerosContext {

}

BoundedContext FlotaPropiaContext {

}

BoundedContext InventarioBodegasContext {

}

BoundedContext InventarioCentrosDistribucionContext {

}

BoundedContext EmpaquetadoContext {

}





